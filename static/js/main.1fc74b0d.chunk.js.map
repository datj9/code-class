{"version":3,"sources":["api/index.js","redux/user/actions.js","redux/user/action-types.js","components/Header/index.js","redux/tutorials/actions.js","pages/HomePage/index.js","redux/tutorials/action-types.js","pages/SignUpPage/index.js","pages/SignInPage/index.js","pages/AdminPage/index.js","adapter/UploadAdapter.js","pages/CreateTutorialPage/index.js","App.js","utils/checkToken.js","serviceWorker.js","redux/tutorials/reducer.js","redux/user/reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["api","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","BaseApi","get","endpoint","res","data","response","post","body","contentType","delete","signUpSuccess","user","type","payload","signUpFail","err","signInSuccess","signInFail","Header","props","isAuthenticated","useSelector","state","currentUser","dispatch","useDispatch","className","to","aria-current","userType","pill","outline","onClick","removeItem","HomePage","this","fetchTutorialsReq","src","React","Component","connect","tutorials","tutorial","a","SignUpPage","email","password","confirmPassword","name","handleEmail","e","setState","target","value","handlePassword","handleConfirmPassword","handleName","submitForm","preventDefault","signUpReq","clearErrorsReq","isLoading","errors","errorsFromStore","EmailError","includes","PasswordError","ConfirmPasswordError","NameError","onSubmit","htmlFor","invalid","id","placeholder","onChange","disabled","decoded","jwtDecode","setItem","signUp","SignInPage","signInReq","block","signIn","AdminPage","UploadAdapter","loader","upload","bind","abort","file","formData","FormData","append","default","linkUrl","CreateTutorialPage","editorValue","handleEditorValue","event","editor","getData","handleThumbnailUrl","uploadImageReq","files","isUploading","ThumbnailImage","alt","ClassicEditor","onInit","ui","view","editable","element","style","height","plugins","createUploadAdapter","onBlur","console","log","onFocus","parse","uploadImage","App","exp","Date","now","isValid","checkToken","setUser","exact","path","component","setUserStart","Boolean","window","location","hostname","match","INITIAL_STATE","error","combineReducers","action","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","store","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1fc74b0d.chunk.js","sourcesContent":["import axios from \"axios\";\r\nexport const apiUrl = \"https://code-class.herokuapp.com\";\r\nconst api = axios.create({\r\n    baseURL: `${apiUrl}/api`,\r\n});\r\n\r\napi.interceptors.request.use(function (config) {\r\n    const token = localStorage.getItem(\"token\");\r\n    config.headers.token = token ? token : \"\";\r\n    config[\"Content-Type\"] = \"application/json\";\r\n    return config;\r\n});\r\n\r\nconst BaseApi = () => {\r\n    return {\r\n        async get(endpoint) {\r\n            try {\r\n                const res = await api.get(endpoint);\r\n                return res.data;\r\n            } catch (error) {\r\n                return error.response.data;\r\n            }\r\n        },\r\n\r\n        async post(endpoint, body, contentType) {\r\n            try {\r\n                const res = await api.post(\r\n                    endpoint,\r\n                    body,\r\n                    contentType === \"formData\" && { headers: { \"content-type\": \"multipart/form-data\" } }\r\n                );\r\n                return res.data;\r\n            } catch (error) {\r\n                return error.response.data;\r\n            }\r\n        },\r\n\r\n        async delete(endpoint) {\r\n            try {\r\n                const res = await api.delete(endpoint);\r\n                return res.data;\r\n            } catch (error) {\r\n                return error.response;\r\n            }\r\n        },\r\n    };\r\n};\r\n\r\nexport default BaseApi;\r\n","import {\r\n    SIGN_UP_START,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SET_USER_START,\r\n    SIGN_OUT_START,\r\n    SIGN_IN_START,\r\n    SIGN_IN_FAILURE,\r\n    SIGN_IN_SUCCESS,\r\n    CLEAR_ERRORS,\r\n} from \"./action-types\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport BaseApi from \"../../api\";\r\n\r\nconst api = BaseApi();\r\n\r\nconst signUpStart = () => ({\r\n    type: SIGN_UP_START,\r\n});\r\n\r\nconst signUpSuccess = (user) => ({\r\n    type: SIGN_UP_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nconst signUpFail = (err) => ({\r\n    type: SIGN_UP_FAILURE,\r\n    payload: err,\r\n});\r\n\r\nexport const signUp = (user) => async (dispatch) => {\r\n    dispatch(signUpStart());\r\n    try {\r\n        const data = await api.post(\"/auth/sign-up\", user);\r\n        if (data.token) {\r\n            const decoded = jwtDecode(data.token);\r\n            localStorage.setItem(\"token\", data.token);\r\n            dispatch(signUpSuccess(decoded));\r\n        } else {\r\n            dispatch(signUpFail(data));\r\n        }\r\n    } catch (error) {\r\n        dispatch(signUpFail(error));\r\n    }\r\n};\r\n\r\nconst setUserStart = (user) => ({\r\n    type: SET_USER_START,\r\n    payload: user,\r\n});\r\n\r\nexport const setUser = (user) => (dispatch) => {\r\n    dispatch(setUserStart(user));\r\n};\r\n\r\nconst signOutStart = () => ({\r\n    type: SIGN_OUT_START,\r\n});\r\n\r\nexport const signOut = () => (dispatch) => {\r\n    localStorage.removeItem(\"token\");\r\n    dispatch(signOutStart());\r\n};\r\n\r\nconst signInStart = () => ({\r\n    type: SIGN_IN_START,\r\n});\r\n\r\nconst signInSuccess = (user) => ({\r\n    type: SIGN_IN_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nconst signInFail = (err) => ({\r\n    type: SIGN_IN_FAILURE,\r\n    payload: err,\r\n});\r\n\r\nexport const signIn = (user) => async (dispatch) => {\r\n    dispatch(signInStart());\r\n    try {\r\n        const data = await api.post(\"/auth/sign-in\", user);\r\n\r\n        if (data.token) {\r\n            const decoded = jwtDecode(data.token);\r\n            localStorage.setItem(\"token\", data.token);\r\n            dispatch(signInSuccess(decoded));\r\n        } else {\r\n            dispatch(signInFail(data));\r\n        }\r\n    } catch (error) {\r\n        dispatch(signInFail(error));\r\n    }\r\n};\r\n\r\nconst clearErrorsStart = () => ({\r\n    type: CLEAR_ERRORS,\r\n});\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch(clearErrorsStart());\r\n};\r\n","export const SIGN_UP_START = \"SIGN_UP_START\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const SET_USER_START = \"SET_USER_START\";\r\n\r\nexport const SIGN_OUT_START = \"SIGN_OUT_START\";\r\n\r\nexport const SIGN_IN_START = \"SIGN_IN_START\";\r\nexport const SIGN_IN_SUCCESS = \"SIGN_IN_SUCCESS\";\r\nexport const SIGN_IN_FAILURE = \"SIGN_IN_FAILURE\";\r\n\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { Button } from \"shards-react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { signOut } from \"../../redux/user/actions\";\r\n\r\nconst Header = (props) => {\r\n    const isAuthenticated = useSelector((state) => state.user.isAuthenticated);\r\n    const currentUser = useSelector((state) => state.user.currentUser);\r\n    const dispatch = useDispatch();\r\n    const signOutReq = () => {\r\n        dispatch(signOut());\r\n    };\r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-md navbar-light bg-white shadow'>\r\n            <div className='container'>\r\n                <NavLink to='/' className='brand text-dark text-decoration-none'>\r\n                    Code Class\r\n                </NavLink>\r\n                <button type='button' className='navbar-toggler'>\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse justify-content-end'>\r\n                    <ul className='navbar-nav'>\r\n                        <li className='nav-item d-flex align-items-center'>\r\n                            <NavLink aria-current='page' className='nav-link active' to='/'>\r\n                                Bài hướng dẫn\r\n                            </NavLink>\r\n                        </li>\r\n                        {currentUser?.userType === \"admin\" ? (\r\n                            <li className='nav-item d-flex align-items-center'>\r\n                                <NavLink aria-current='page' className='nav-link active' to='/admin/tutorials'>\r\n                                    Trang Admin\r\n                                </NavLink>\r\n                            </li>\r\n                        ) : null}\r\n                        {isAuthenticated ? null : (\r\n                            <li className='nav-item'>\r\n                                <NavLink aria-current='page' className='nav-link active' to='/sign-up'>\r\n                                    <Button pill>Đăng ký</Button>\r\n                                </NavLink>\r\n                            </li>\r\n                        )}\r\n                        {isAuthenticated ? null : (\r\n                            <li className='nav-item'>\r\n                                <NavLink aria-current='page' className='nav-link active' to='/sign-in'>\r\n                                    <Button pill outline>\r\n                                        Đăng nhập\r\n                                    </Button>\r\n                                </NavLink>\r\n                            </li>\r\n                        )}\r\n                        {isAuthenticated ? (\r\n                            <li className='nav-item'>\r\n                                <NavLink onClick={signOutReq} aria-current='page' className='nav-link active' to='/'>\r\n                                    <Button pill outline>\r\n                                        Đăng xuất\r\n                                    </Button>\r\n                                </NavLink>\r\n                            </li>\r\n                        ) : null}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import {\r\n    FETCH_TUTORIALS_START,\r\n    FETCH_TUTORIALS_SUCCESS,\r\n    FETCH_TUTORIALS_FAILURE,\r\n    UPLOAD_IMAGE_START,\r\n    UPLOAD_IMAGE_SUCCESS,\r\n} from \"./action-types\";\r\nimport BaseApi from \"../../api\";\r\n\r\nconst api = BaseApi();\r\n\r\nconst fetchTutorialsStart = () => ({\r\n    type: FETCH_TUTORIALS_START,\r\n});\r\n\r\nconst fetchTutorialsSuccess = (tutorials) => ({\r\n    type: FETCH_TUTORIALS_SUCCESS,\r\n    payload: tutorials,\r\n});\r\n\r\nconst fetchTutorialsFailure = (err) => ({\r\n    type: FETCH_TUTORIALS_FAILURE,\r\n    payload: err,\r\n});\r\n\r\nexport const fetchTutorials = () => async (dispatch) => {\r\n    dispatch(fetchTutorialsStart());\r\n    try {\r\n        const data = await api.get(\"/products\");\r\n        dispatch(fetchTutorialsSuccess(data));\r\n    } catch (error) {\r\n        dispatch(fetchTutorialsFailure(error));\r\n    }\r\n};\r\n\r\nconst uploadImageStart = () => ({\r\n    type: UPLOAD_IMAGE_START,\r\n});\r\n\r\nconst uploadImageSuccess = (url) => ({\r\n    type: UPLOAD_IMAGE_SUCCESS,\r\n    payload: url,\r\n});\r\n\r\nexport const uploadImage = (file) => async (dispatch) => {\r\n    dispatch(uploadImageStart());\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    const { linkUrl } = await api.post(\"/tutorials/upload-image\", formData, \"formData\");\r\n    dispatch(uploadImageSuccess(linkUrl));\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { Card, CardTitle, CardImg, CardBody } from \"shards-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTutorials } from \"../../redux/tutorials/actions\";\r\n\r\nclass HomePage extends React.Component {\r\n    state = {};\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTutorialsReq();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container py-5'>\r\n                <h1 className='title mb-3 d-block'>Bài hướng dẫn</h1>\r\n                <hr />\r\n\r\n                <div className='d-flex flex-wrap'>\r\n                    <Card>\r\n                        <CardImg src='https://place-hold.it/300x200' />\r\n                        <CardBody>\r\n                            <CardTitle>Lorem Ipsum</CardTitle>\r\n                            <p>Đây là phần mô tả</p>\r\n                        </CardBody>\r\n                    </Card>\r\n                    <Card>\r\n                        <CardImg src='https://place-hold.it/300x200' />\r\n                        <CardBody>\r\n                            <CardTitle>Lorem Ipsum</CardTitle>\r\n                            <p>Đây là phần mô tả</p>\r\n                        </CardBody>\r\n                    </Card>\r\n                    <Card>\r\n                        <CardImg src='https://place-hold.it/300x200' />\r\n                        <CardBody>\r\n                            <CardTitle>Lorem Ipsum</CardTitle>\r\n                            <p>Đây là phần mô tả</p>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tutorials: state.tutorial.tutorials,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchTutorialsReq: () => dispatch(fetchTutorials()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","export const FETCH_TUTORIALS_START = \"FETCH_TUTORIALS_START\";\r\nexport const FETCH_TUTORIALS_SUCCESS = \"FETCH_TUTORIALS_SUCCESS\";\r\nexport const FETCH_TUTORIALS_FAILURE = \"FETCH_TUTORIALS_FAILURE\";\r\nexport const UPLOAD_IMAGE_START = \"UPLOAD_IMAGE_START\";\r\nexport const UPLOAD_IMAGE_SUCCESS = \"UPLOAD_IMAGE_SUCCESS\";\r\nexport const UPLOAD_IMAGE_FAILURE = \"UPLOAD_IMAGE_FAILURE\";\r\n","import React, { Component } from \"react\";\r\nimport { Form, FormInput, FormGroup, Button } from \"shards-react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp, clearErrors } from \"../../redux/user/actions\";\r\n\r\nclass SignUpPage extends Component {\r\n    state = { email: \"\", password: \"\", confirmPassword: \"\", name: \"\" };\r\n\r\n    handleEmail = (e) => {\r\n        this.setState({ email: e.target.value });\r\n    };\r\n    handlePassword = (e) => {\r\n        this.setState({ password: e.target.value });\r\n    };\r\n    handleConfirmPassword = (e) => {\r\n        this.setState({ confirmPassword: e.target.value });\r\n    };\r\n    handleName = (e) => {\r\n        this.setState({ name: e.target.value });\r\n    };\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUpReq({\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            name: this.state.name,\r\n        });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearErrorsReq();\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, isLoading, errorsFromStore: errors } = this.props;\r\n\r\n        const EmailError = () => {\r\n            const { email } = errors;\r\n            if (email && email.includes(\"required\")) {\r\n                return <div className='text-danger mt-1'>Vui lòng nhập vào email</div>;\r\n            }\r\n            if (email && email.includes(\"exist\")) {\r\n                return <div className='text-danger mt-1'>Email đã tồn tại</div>;\r\n            }\r\n            if (email && email.includes(\"not valid\")) {\r\n                return <div className='text-danger mt-1'>Email không hợp lệ</div>;\r\n            }\r\n            return null;\r\n        };\r\n        const PasswordError = () => {\r\n            const { password } = errors;\r\n            if (password && password.includes(\"required\")) {\r\n                return <div className='text-danger mt-1'>Vui lòng nhập vào mật khẩu</div>;\r\n            }\r\n            if (password && password.includes(\"weak\")) {\r\n                return <div className='text-danger mt-1'>Mật khẩu phải có ít nhất 8 ký tự</div>;\r\n            }\r\n            return null;\r\n        };\r\n\r\n        const ConfirmPasswordError = () => {\r\n            const { confirmPassword } = errors;\r\n            if (confirmPassword && confirmPassword.includes(\"required\")) {\r\n                return <div className='text-danger mt-1'>Vui lòng nhập vào phần xác nhận mật khẩu</div>;\r\n            }\r\n            if (confirmPassword && confirmPassword.includes(\"does not match\")) {\r\n                return <div className='text-danger mt-1'>Xác nhận mật khẩu không khớp với mật khẩu</div>;\r\n            }\r\n            return null;\r\n        };\r\n\r\n        const NameError = () => {\r\n            const { name } = errors;\r\n            if (name && name.includes(\"required\")) {\r\n                return <div className='text-danger mt-1'>Vui lòng nhập vào tên</div>;\r\n            }\r\n            return null;\r\n        };\r\n\r\n        if (isAuthenticated) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        return (\r\n            <div className='container my-5'>\r\n                <h3 className='mb-3'>Đăng ký tài khoản</h3>\r\n                <Form onSubmit={this.submitForm}>\r\n                    <FormGroup>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <FormInput invalid={errors.email} id='email' placeholder='Email' onChange={this.handleEmail} />\r\n                        <EmailError />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor='name'>Họ Tên</label>\r\n                        <FormInput\r\n                            invalid={errors.name}\r\n                            type='text'\r\n                            placeholder='Họ Tên'\r\n                            id='name'\r\n                            onChange={this.handleName}\r\n                        />\r\n                        <NameError />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <FormInput\r\n                            invalid={errors.password}\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            id='password'\r\n                            onChange={this.handlePassword}\r\n                        />\r\n                        <PasswordError />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor='confirmPassword'>Xác nhận mật khẩu</label>\r\n                        <FormInput\r\n                            invalid={errors.confirmPassword}\r\n                            type='password'\r\n                            placeholder='Xác nhận mật khẩu'\r\n                            id='confirmPassword'\r\n                            onChange={this.handleConfirmPassword}\r\n                        />\r\n                        <ConfirmPasswordError />\r\n                    </FormGroup>\r\n                    <Button disabled={isLoading} pill type='submit' onClick={this.submitForm}>\r\n                        {isLoading ? \"Đang Đăng Ký\" : \"Đăng Ký\"}\r\n                    </Button>\r\n                    <div className='mt-2'>\r\n                        <span>Bạn đã có tài khoản </span>\r\n                        <Link className='text-decoration-none' to='/sign-in'>\r\n                            Đăng Nhập\r\n                        </Link>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.user.isAuthenticated,\r\n    errorsFromStore: state.user.errors,\r\n    isLoading: state.user.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signUpReq: (user) => dispatch(signUp(user)),\r\n    clearErrorsReq: () => dispatch(clearErrors()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPage);\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { Form, FormInput, FormGroup, Button } from \"shards-react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, clearErrors } from \"../../redux/user/actions\";\r\n\r\nclass SignInPage extends Component {\r\n    state = { email: \"\", password: \"\" };\r\n\r\n    handleEmail = (e) => {\r\n        this.setState({ email: e.target.value });\r\n    };\r\n    handlePassword = (e) => {\r\n        this.setState({ password: e.target.value });\r\n    };\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.signInReq({ email: this.state.email, password: this.state.password });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearErrorsReq();\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, isLoading, errorsFromStore: errors } = this.props;\r\n\r\n        const EmailError = () => {\r\n            if (errors.email && errors.email.includes(\"exist\")) {\r\n                return <div className='text-danger mt-1'>Email không tồn tại</div>;\r\n            }\r\n            if (errors.email && errors.email.includes(\"required\")) {\r\n                return <div className='text-danger mt-1'>Vui lòng nhập vào email</div>;\r\n            }\r\n            return null;\r\n        };\r\n        const PasswordError = () => {\r\n            if (errors.password && errors.password.includes(\"does not match\")) {\r\n                return <div className='text-danger mt-1'>Mật khẩu không đúng</div>;\r\n            }\r\n            if (errors.password && errors.password.includes(\"required\")) {\r\n                return <div className='text-danger mt-1'>Vui lòng nhập vào mật khẩu</div>;\r\n            }\r\n            return null;\r\n        };\r\n        if (isAuthenticated) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        return (\r\n            <div className='bg-primary sign-in'>\r\n                <div className='container h-100 w-50 d-flex align-items-center justify-content-center'>\r\n                    <div className='w-75 h-75 px-3 d-flex justify-content-center flex-column shadow-lg rounded bg-white'>\r\n                        <h3 className='mb-3 text-center'>Đăng Nhập</h3>\r\n                        <Form onSubmit={this.submitForm}>\r\n                            <FormGroup>\r\n                                <label htmlFor='email'>Email</label>\r\n                                <FormInput\r\n                                    invalid={errors.email}\r\n                                    placeholder='Email'\r\n                                    id='email'\r\n                                    onChange={this.handleEmail}\r\n                                />\r\n                                <EmailError />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor='password'>Password</label>\r\n                                <FormInput\r\n                                    invalid={errors.password}\r\n                                    type='password'\r\n                                    placeholder='Password'\r\n                                    id='password'\r\n                                    onChange={this.handlePassword}\r\n                                />\r\n                                <PasswordError />\r\n                            </FormGroup>\r\n                            <Button block disabled={isLoading} type='submit' onClick={this.submitForm}>\r\n                                {isLoading ? \"Đang Đăng Nhập...\" : \"Đăng Nhập\"}\r\n                            </Button>\r\n                            <div className='mt-3 text-center'>\r\n                                <span>Bạn chưa có tài khoản </span>\r\n                                <Link className='text-decoration-none' to='/sign-up'>\r\n                                    Đăng Ký\r\n                                </Link>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.user.isAuthenticated,\r\n    errorsFromStore: state.user.errors,\r\n    isLoading: state.user.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signInReq: (user) => dispatch(signIn(user)),\r\n    clearErrorsReq: () => dispatch(clearErrors()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPage);\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardTitle, CardImg, CardBody, FormInput, Button } from \"shards-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AdminPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='container py-5'>\r\n                <h1 className='title mb-3 d-block'>Các bài hướng dẫn</h1>\r\n                <hr />\r\n                <FormInput placeholder='Tìm kiếm bài hướng dẫn theo tiêu đề' className='mb-3' />\r\n                <Link to='/admin/tutorials/create-tutorial'>\r\n                    <Button className='mb-3'>Tạo Bài Hướng Dẫn</Button>\r\n                </Link>\r\n                <div className='d-flex flex-wrap'>\r\n                    <Card>\r\n                        <CardImg src='https://place-hold.it/300x200' />\r\n                        <CardBody>\r\n                            <CardTitle>Lorem Ipsum</CardTitle>\r\n                            <p>Đây là phần mô tả</p>\r\n                        </CardBody>\r\n                    </Card>\r\n                    <Card>\r\n                        <CardImg src='https://place-hold.it/300x200' />\r\n                        <CardBody>\r\n                            <CardTitle>Lorem Ipsum</CardTitle>\r\n                            <p>Đây là phần mô tả</p>\r\n                        </CardBody>\r\n                    </Card>\r\n                    <Card>\r\n                        <CardImg src='https://place-hold.it/300x200' />\r\n                        <CardBody>\r\n                            <CardTitle>Lorem Ipsum</CardTitle>\r\n                            <p>Đây là phần mô tả</p>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminPage;\r\n","import BaseApi from \"../api\";\r\n\r\nconst api = BaseApi();\r\n\r\nclass UploadAdapter {\r\n    constructor(loader) {\r\n        this.loader = loader;\r\n        this.upload = this.upload.bind(this);\r\n        this.abort = this.abort.bind(this);\r\n    }\r\n\r\n    async upload() {\r\n        const file = await this.loader.file;\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n\r\n        try {\r\n            const data = await api.post(\"/tutorials/upload-image\", formData, \"formData\");\r\n            data.default = data.linkUrl;\r\n            return data;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n    abort() {\r\n        // Reject promise returned from upload() method.\r\n    }\r\n}\r\n\r\nexport default UploadAdapter;\r\n","import React, { Component } from \"react\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport UploadAdapter from \"../../adapter/UploadAdapter\";\r\nimport parse from \"html-react-parser\";\r\nimport { FormInput } from \"shards-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { uploadImage } from \"../../redux/tutorials/actions\";\r\n\r\nclass CreateTutorialPage extends Component {\r\n    state = { editorValue: \"\" };\r\n\r\n    handleEditorValue = (event, editor) => {\r\n        const data = editor.getData();\r\n        this.setState({ editorValue: data });\r\n    };\r\n\r\n    handleThumbnailUrl = (e) => {\r\n        this.props.uploadImageReq(e.target.files[0]);\r\n    };\r\n\r\n    render() {\r\n        const { editorValue } = this.state;\r\n        const { linkUrl, isUploading } = this.props;\r\n\r\n        const ThumbnailImage = () => {\r\n            if (linkUrl) {\r\n                return (\r\n                    <div className='w-50'>\r\n                        <img src={linkUrl} alt='' className='w-100 h-auto' />\r\n                    </div>\r\n                );\r\n            }\r\n            return null;\r\n        };\r\n\r\n        return (\r\n            <div className='container my-5'>\r\n                <FormInput placeholder='Tiêu đề' className='mb-3' />\r\n                <FormInput placeholder='Mô tả' className='mb-3' />\r\n                <div className='custom-file mb-3'>\r\n                    <input\r\n                        type='file'\r\n                        className='custom-file-input'\r\n                        id='customFile'\r\n                        onChange={this.handleThumbnailUrl}\r\n                    />\r\n                    <label className='custom-file-label' htmlFor='customFile'>\r\n                        {isUploading ? \"Đang đăng tải\" : \"Chọn hình thumbnail\"}\r\n                    </label>\r\n                </div>\r\n                <ThumbnailImage />\r\n\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    data={editorValue}\r\n                    onInit={(editor) => {\r\n                        editor.ui.view.editable.element.style.height = \"200px\";\r\n                        editor.plugins.get(\"FileRepository\").createUploadAdapter = function (loader) {\r\n                            return new UploadAdapter(loader);\r\n                        };\r\n                    }}\r\n                    onChange={this.handleEditorValue}\r\n                    onBlur={(event, editor) => {\r\n                        console.log(\"Blur.\", editor);\r\n                    }}\r\n                    onFocus={(event, editor) => {\r\n                        console.log(\"Focus.\", editor);\r\n                    }}\r\n                />\r\n\r\n                <div className='mt-5'>\r\n                    <span className='h4'>Xem trước ở bên dưới</span>\r\n                    {parse(editorValue)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    linkUrl: state.tutorial.linkUrl,\r\n    isUploading: state.tutorial.isUploading,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    uploadImageReq: (file) => dispatch(uploadImage(file)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTutorialPage);\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport HomePage from \"./pages/HomePage\";\nimport SignUpPage from \"./pages/SignUpPage\";\nimport SignInPage from \"./pages/SignInPage\";\nimport AdminPage from \"./pages/AdminPage\";\nimport CreateTutorialPage from \"./pages/CreateTutorialPage\";\nimport checkToken from \"./utils/checkToken\";\nimport { connect } from \"react-redux\";\nimport { setUser } from \"./redux/user/actions\";\n\nclass App extends Component {\n    componentDidMount() {\n        const { isValid, user } = checkToken();\n        if (isValid) {\n            this.props.setUser(user);\n        }\n    }\n    render() {\n        return (\n            <Router>\n                <Header />\n                <Switch>\n                    <Route exact path='/' component={HomePage} />\n                    <Route exact path='/sign-up' component={SignUpPage} />\n                    <Route exact path='/sign-in' component={SignInPage} />\n                    <Route exact path='/admin/tutorials' component={AdminPage} />\n                    <Route exact path='/admin/tutorials/create-tutorial' component={CreateTutorialPage} />\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setUser: (user) => dispatch(setUser(user)),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import jwtDecode from \"jwt-decode\";\r\n\r\nexport default function () {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n        const decoded = jwtDecode(token);\r\n        if (decoded.exp > Date.now() / 1000) {\r\n            return {\r\n                isValid: true,\r\n                user: decoded,\r\n            };\r\n        }\r\n        return {\r\n            isValid: false,\r\n        };\r\n    }\r\n    return {\r\n        isValid: false,\r\n    };\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    FETCH_TUTORIALS_START,\r\n    FETCH_TUTORIALS_SUCCESS,\r\n    FETCH_TUTORIALS_FAILURE,\r\n    UPLOAD_IMAGE_SUCCESS,\r\n    UPLOAD_IMAGE_START,\r\n} from \"./action-types\";\r\n\r\nconst INITIAL_STATE = {\r\n    isLoading: false,\r\n    tutorials: [],\r\n    linkUrl: \"\",\r\n    isUploading: false,\r\n    error: {},\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case FETCH_TUTORIALS_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case FETCH_TUTORIALS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                tutorials: action.payload,\r\n            };\r\n        case FETCH_TUTORIALS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload,\r\n            };\r\n        case UPLOAD_IMAGE_START:\r\n            return {\r\n                ...state,\r\n                isUploading: true,\r\n            };\r\n        case UPLOAD_IMAGE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isUploading: false,\r\n                linkUrl: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    SIGN_UP_START,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SET_USER_START,\r\n    SIGN_OUT_START,\r\n    SIGN_IN_START,\r\n    SIGN_IN_SUCCESS,\r\n    SIGN_IN_FAILURE,\r\n    CLEAR_ERRORS,\r\n} from \"./action-types\";\r\n\r\nconst INITIAL_STATE = {\r\n    isLoading: false,\r\n    currentUser: {},\r\n    isAuthenticated: false,\r\n    errors: {},\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SIGN_UP_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case SIGN_UP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                currentUser: action.payload,\r\n                isAuthenticated: true,\r\n            };\r\n        case SIGN_UP_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errors: action.payload,\r\n            };\r\n        case SET_USER_START:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                isAuthenticated: true,\r\n            };\r\n        case SIGN_OUT_START:\r\n            return {\r\n                ...state,\r\n                currentUser: {},\r\n                isAuthenticated: false,\r\n            };\r\n        case SIGN_IN_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case SIGN_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                currentUser: action.payload,\r\n                isAuthenticated: true,\r\n            };\r\n        case SIGN_IN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errors: action.payload,\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport tutorial from \"./tutorials/reducer\";\r\nimport user from \"./user/reducer\";\r\n\r\nexport default combineReducers({\r\n    tutorial,\r\n    user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}